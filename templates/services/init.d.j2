#!/bin/bash

# chkconfig: 3 50 50

### BEGIN INIT INFO
# Provides:          mongodb_exporter
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Should-Start:      $all
# Should-Stop:       $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: MongoDB metrics exporter for Prometheus.
# Description:       Prometheus is a systems and service monitoring system.
#                    It collects metrics from configured targets at given intervals,
#                    evaluates rule expressions, displays the results,
#                    and can trigger alerts if some condition is observed to be true.
### END INIT INFO

success() {
    echo $@
}

failure() {
    echo $@
}

NAME=mongodb_exporter
DESC="MongoDB metrics exporter for Prometheus."
DAEMON=/usr/local/bin/mongodb_exporter
USER=mongodb-exporter
PID="/var/run/$NAME.pid"
LOG="/var/log/$NAME.log"
RETVAL=0
source /etc/mongodb-exporter/mongodb-exporter.config
DAEMON_OPTS=" $CONFIG"

# Check if DAEMON binary exist
[ -f $DAEMON ] || exit 0


start () {
  echo -n $"Starting $NAME: "

  # Check if PID exists
  if [ -f ${PID} ] && kill -SIGCONT $(cat ${PID}) 2> /dev/null; then
        failure "PID file exists and process is running for mongodb-exporter"
        RETVAL=1
    else
      echo "su ${USER} -s /bin/bash -c "$DAEMON $DAEMON_OPTS " >> ${LOG} 2>&1 &"
      su ${USER} -s /bin/bash -m -c "$DAEMON $DAEMON_OPTS " >> ${LOG} 2>&1 &
      RETVAL=$?

      # Store PID
      echo $! > ${PID}

      # Success
      [ $RETVAL = 0 ] && success "${NAME} started"
  fi 
  echo
  return $RETVAL
}

stop () {
  start-stop-daemon --retry TERM/5/KILL/5 --oknodo --stop --quiet --pidfile $PID 2>&1 1>$LOG
}


case "$1" in
  start)
    start
    ;;

  stop)
    stop
    ;;

  reload)
    if start-stop-daemon --stop --signal HUP --quiet --oknodo --pidfile $PID --startas /bin/bash -- -c "exec $DAEMON $DAEMON_OPTS > $LOG 2>&1"
    then
      log_end_msg 0
    else
      log_end_msg 1
	  fi
    ;;

  restart|force-reload)
    stop
    start
    ;;

  syntax)
    $DAEMON --help
    ;;

  status)
    if
      [ ! -f ${PID} ]
    then
      echo "${NAME} is not running"
      RETVAL=1
    elif
      kill -0 $(cat ${PID})
    then
      echo "${NAME} is running (pid: $(cat ${PID}))"
      RETVAL=0
    else
      echo "${NAME} is dead (pid: $(cat ${PID}))"
      RETVAL=2
    fi
    ;;


  *)
    log_action_msg "Usage: /etc/init.d/$NAME {start|stop|reload|restart|force-reload|syntax|status}"
    ;;
esac

exit 0
